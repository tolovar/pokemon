{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Lavoro\\\\workspace\\\\pokemonweb\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"./Auth.css\";\nimport { typeColorClass } from '../utils/typeColorClass';\nimport Loader from './common/Loader';\nimport Input from './common/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRecovery, setShowRecovery] = useState(false);\n  const [recoveryEmail, setRecoveryEmail] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // setto i campi del form come vuoti per pulirli quando ricarico la pagina\n  useEffect(() => {\n    setUsername('');\n    setPassword('');\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    if (!username || !password) {\n      setError('Inserisci utente e password');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      // validazione della risposta\n      if (!res.ok) {\n        const data = await res.json();\n        throw new Error(data.message || 'Errore di autenticazione');\n      }\n      const data = await res.json();\n      // salvo il token JWT (es: localStorage)\n      localStorage.setItem('token', data.token);\n      login({\n        id: username,\n        name: username\n      });\n      // reindirizzo l'utente alla pagina personale \n      navigate('/pokemon-team');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRecovery = async e => {\n    e.preventDefault();\n    setError('');\n    if (!recoveryEmail || !/\\S+@\\S+\\.\\S+/.test(recoveryEmail)) {\n      setError('Inserisci una email valida');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/recover', {\n        // qui devo mettere l'url del backend\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: recoveryEmail\n        })\n      });\n      if (!res.ok) {\n        const data = await res.json();\n        throw new Error(data.message || 'Errore nel recupero password');\n      }\n      // qui devo implementare l'invio dell'email di recupero\n      // per ora simulo l'invio con un alert\n      alert('Email di recupero inviata!');\n      setShowRecovery(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-[70vh]\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bg-white/90 rounded-2xl shadow-2xl p-8 w-full max-w-md space-y-6 border-4 border-red-500\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center text-red-600\",\n        children: \"Accedi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-600 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full px-4 py-2 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-yellow-400 transition\",\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-red-600 text-white py-2 rounded-lg font-bold hover:bg-yellow-400 hover:text-red-700 transition\",\n        type: \"submit\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, this) : 'Accedi'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/recover\",\n          className: \"text-blue-600 hover:underline\",\n          children: \"Password dimenticata?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          className: \"text-blue-600 hover:underline\",\n          children: \"Registrati\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"WoFW0TTXjeWGxYVNCsd2gJ0phaw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","Link","AuthContext","typeColorClass","Loader","Input","jsxDEV","_jsxDEV","Login","_s","login","username","setUsername","password","setPassword","showPassword","setShowPassword","showRecovery","setShowRecovery","recoveryEmail","setRecoveryEmail","error","setError","loading","setLoading","navigate","handleLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","data","json","Error","message","localStorage","setItem","token","id","name","err","handleRecovery","test","email","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["C:/Users/aless/Lavoro/workspace/pokemonweb/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport \"./Auth.css\";\r\nimport { typeColorClass } from '../utils/typeColorClass';\r\nimport Loader from './common/Loader';\r\nimport Input from './common/Input';\r\n\r\nfunction Login() {\r\n  const { login } = useContext(AuthContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showRecovery, setShowRecovery] = useState(false);\r\n  const [recoveryEmail, setRecoveryEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // setto i campi del form come vuoti per pulirli quando ricarico la pagina\r\n  useEffect(() => {\r\n    setUsername('');\r\n    setPassword('');\r\n  }, []);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    if (!username || !password) {\r\n      setError('Inserisci utente e password');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      // validazione della risposta\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        throw new Error(data.message || 'Errore di autenticazione');\r\n      }\r\n      const data = await res.json();\r\n      // salvo il token JWT (es: localStorage)\r\n      localStorage.setItem('token', data.token);\r\n      login({ id: username, name: username });\r\n      // reindirizzo l'utente alla pagina personale \r\n      navigate('/pokemon-team');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRecovery = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    if (!recoveryEmail || !/\\S+@\\S+\\.\\S+/.test(recoveryEmail)) {\r\n      setError('Inserisci una email valida');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/recover', { // qui devo mettere l'url del backend\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: recoveryEmail }),\r\n      });\r\n      if (!res.ok) {\r\n        const data = await res.json();\r\n        throw new Error(data.message || 'Errore nel recupero password');\r\n      }\r\n      // qui devo implementare l'invio dell'email di recupero\r\n      // per ora simulo l'invio con un alert\r\n      alert('Email di recupero inviata!');\r\n      setShowRecovery(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-[70vh]\">\r\n      <form className=\"bg-white/90 rounded-2xl shadow-2xl p-8 w-full max-w-md space-y-6 border-4 border-red-500\" onSubmit={handleLogin}>\r\n        <h2 className=\"text-2xl font-bold text-center text-red-600\">Accedi</h2>\r\n        {error && <div className=\"text-red-600 text-center\">{error}</div>}\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"w-full px-4 py-2 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-yellow-400 transition\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"w-full bg-red-600 text-white py-2 rounded-lg font-bold hover:bg-yellow-400 hover:text-red-700 transition\"\r\n          type=\"submit\"\r\n        >\r\n          {loading ? <Loader /> : 'Accedi'}\r\n        </button>\r\n        <div className=\"flex justify-between text-sm\">\r\n          <a href=\"/recover\" className=\"text-blue-600 hover:underline\">Password dimenticata?</a>\r\n          <a href=\"/register\" className=\"text-blue-600 hover:underline\">Registrati</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}