{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlessioLongo\\\\OneDrive - ITS Angelo Rizzoli\\\\Documenti\\\\Workspace\\\\pokemonweb\\\\frontend\\\\src\\\\components\\\\PokemonList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PokemonGrid from './PokemonGrid';\nimport '../App.css';\nimport useDebounce from '../hooks/useDebounce';\n\n// creo il componente che mostra la lista dei pokémon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonList() {\n  _s();\n  const [allPokemonNames, setAllPokemonNames] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchError, setSearchError] = useState('');\n  const [pokemonDetails, setPokemonDetails] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [debouncedSearch, setDebouncedSearch] = useState('');\n  const navigate = useNavigate();\n\n  // debounce handler\n  const debouncedSetSearch = useDebounce(value => {\n    setDebouncedSearch(value);\n  }, 800, {\n    trailing: true\n  });\n\n  // scarico tutti i pokémon una sola volta\n  useEffect(() => {\n    const fetchAllPokemonNames = async () => {\n      try {\n        const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1300');\n        const data = await res.json();\n        setAllPokemonNames(data.results.map(p => p.name));\n      } catch (err) {\n        setSearchError('Errore nel caricamento dei nomi Pokémon');\n      }\n    };\n    fetchAllPokemonNames();\n  }, []);\n\n  // effettuo la ricerca solo tramite API e anche su corrispondenze parziali\n  useEffect(() => {\n    if (debouncedSearch.trim() === '') {\n      setSearchResults([]);\n      setSearchError('');\n      return;\n    }\n    setLoading(true);\n    setSearchError('');\n    // filtro i nomi che contengono la stringa inserita\n    const filteredNames = allPokemonNames.filter(name => name.toLowerCase().includes(debouncedSearch.toLowerCase()));\n    if (filteredNames.length === 0) {\n      setSearchResults([]);\n      setSearchError('Nessun Pokémon trovato');\n      setLoading(false);\n      return;\n    }\n    // Sscarico i dettagli dei Pokémon trovati\n    Promise.all(\n    // prendo solo 10 risultati per evitare troppi richieste\n    filteredNames.slice(0, 10).map(async name => {\n      if (pokemonDetails[name]) return pokemonDetails[name];\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n      return await res.json();\n    })).then(detailsArr => {\n      // aggiorno cache dettagli\n      const detailsObj = {};\n      detailsArr.forEach(d => {\n        if (d && d.name) detailsObj[d.name] = d;\n      });\n      setPokemonDetails(prev => ({\n        ...prev,\n        ...detailsObj\n      }));\n      setSearchResults(detailsArr.filter(d => d && d.name));\n      setLoading(false);\n    }).catch(() => {\n      setSearchError('Errore nella ricerca');\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearch, allPokemonNames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-form\",\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"cerca pok\\xE9mon per nome\",\n          value: search,\n          onChange: e => {\n            setSearch(e.target.value);\n            debouncedSetSearch(e.target.value);\n          },\n          style: {\n            padding: '8px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), searchError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'yellow',\n          marginBottom: 10\n        },\n        children: searchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonGrid, {\n        pokemonList: search.trim() === '' ? [] : searchResults.map(d => ({\n          name: d.name,\n          url: `https://pokeapi.co/api/v2/pokemon/${d.name}`\n        })),\n        pokemonDetails: pokemonDetails,\n        onPokemonClick: name => navigate(`/pokemon/${name}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          marginTop: 10\n        },\n        children: \"Caricamento...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonList, \"8j7tYtCB0dSlc8QC7UV3l4igbWo=\", false, function () {\n  return [useNavigate, useDebounce];\n});\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PokemonGrid","useDebounce","jsxDEV","_jsxDEV","PokemonList","_s","allPokemonNames","setAllPokemonNames","search","setSearch","searchResults","setSearchResults","searchError","setSearchError","pokemonDetails","setPokemonDetails","loading","setLoading","debouncedSearch","setDebouncedSearch","navigate","debouncedSetSearch","value","trailing","fetchAllPokemonNames","res","fetch","data","json","results","map","p","name","err","trim","filteredNames","filter","toLowerCase","includes","length","Promise","all","slice","then","detailsArr","detailsObj","forEach","d","prev","catch","className","children","onSubmit","e","preventDefault","type","placeholder","onChange","target","style","padding","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","pokemonList","url","onPokemonClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/AlessioLongo/OneDrive - ITS Angelo Rizzoli/Documenti/Workspace/pokemonweb/frontend/src/components/PokemonList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PokemonGrid from './PokemonGrid';\r\nimport '../App.css';\r\nimport useDebounce from '../hooks/useDebounce';\r\n\r\n// creo il componente che mostra la lista dei pokémon\r\nfunction PokemonList() {\r\n  const [allPokemonNames, setAllPokemonNames] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchError, setSearchError] = useState('');\r\n  const [pokemonDetails, setPokemonDetails] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [debouncedSearch, setDebouncedSearch] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // debounce handler\r\n  const debouncedSetSearch = useDebounce((value) => {\r\n    setDebouncedSearch(value);\r\n  }, 800, { trailing: true });\r\n\r\n  // scarico tutti i pokémon una sola volta\r\n  useEffect(() => {\r\n    const fetchAllPokemonNames = async () => {\r\n      try {\r\n        const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1300');\r\n        const data = await res.json();\r\n        setAllPokemonNames(data.results.map(p => p.name));\r\n      } catch (err) {\r\n        setSearchError('Errore nel caricamento dei nomi Pokémon');\r\n      }\r\n    };\r\n    fetchAllPokemonNames();\r\n  }, []);\r\n\r\n  // effettuo la ricerca solo tramite API e anche su corrispondenze parziali\r\n  useEffect(() => {\r\n    if (debouncedSearch.trim() === '') {\r\n      setSearchResults([]);\r\n      setSearchError('');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setSearchError('');\r\n    // filtro i nomi che contengono la stringa inserita\r\n    const filteredNames = allPokemonNames.filter(name =>\r\n      name.toLowerCase().includes(debouncedSearch.toLowerCase())\r\n    );\r\n    if (filteredNames.length === 0) {\r\n      setSearchResults([]);\r\n      setSearchError('Nessun Pokémon trovato');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    // Sscarico i dettagli dei Pokémon trovati\r\n    Promise.all(\r\n      // prendo solo 10 risultati per evitare troppi richieste\r\n      filteredNames.slice(0, 10).map(async name => {\r\n        if (pokemonDetails[name]) return pokemonDetails[name];\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n        return await res.json();\r\n      })\r\n    ).then(detailsArr => {\r\n      // aggiorno cache dettagli\r\n      const detailsObj = {};\r\n      detailsArr.forEach(d => {\r\n        if (d && d.name) detailsObj[d.name] = d;\r\n      });\r\n      setPokemonDetails(prev => ({ ...prev, ...detailsObj }));\r\n      setSearchResults(detailsArr.filter(d => d && d.name));\r\n      setLoading(false);\r\n    }).catch(() => {\r\n      setSearchError('Errore nella ricerca');\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [debouncedSearch, allPokemonNames]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <header className=\"App-header\">\r\n        {/* qui mostro il form per filtrare i pokémon */}\r\n        <form className=\"search-form\" onSubmit={e => e.preventDefault()}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"cerca pokémon per nome\"\r\n            value={search}\r\n            onChange={e => {\r\n              setSearch(e.target.value);\r\n              debouncedSetSearch(e.target.value);\r\n            }}\r\n            style={{ padding: '8px', fontSize: '16px' }}\r\n          />\r\n        </form>\r\n        {searchError && (\r\n          <div style={{ color: 'yellow', marginBottom: 10 }}>{searchError}</div>\r\n        )}\r\n        {/* qui uso il nuovo componente per mostrare la griglia dei pokémon */}\r\n        <PokemonGrid\r\n          pokemonList={search.trim() === '' ? [] : searchResults.map(d => ({ name: d.name, url: `https://pokeapi.co/api/v2/pokemon/${d.name}` }))}\r\n          pokemonDetails={pokemonDetails}\r\n          onPokemonClick={name => navigate(`/pokemon/${name}`)}\r\n        />\r\n        {loading && <div style={{ color: 'white', marginTop: 10 }}>Caricamento...</div>}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}