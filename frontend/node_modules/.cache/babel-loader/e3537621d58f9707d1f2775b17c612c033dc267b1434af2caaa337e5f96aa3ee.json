{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlessioLongo\\\\OneDrive - ITS Angelo Rizzoli\\\\Documenti\\\\Workspace\\\\pokemonweb\\\\frontend\\\\src\\\\components\\\\PokemonList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PokemonGrid from './PokemonGrid';\nimport '../App.css';\n\n// creo il componente che mostra la lista dei pokémon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonList() {\n  _s();\n  // imposto il numero di pokémon per pagina\n  const PAGE_SIZE = 18;\n  const [pokemonList, setPokemonList] = useState([]);\n  const [search, setSearch] = useState('');\n  // uso la porta 5000 per il server locale (è quella default di flask)\n  const [nextUrl, setNextUrl] = useState(`http://localhost:5000/api/pokemon?limit=${PAGE_SIZE}`);\n  const [loading, setLoading] = useState(false);\n  const [pokemonDetails, setPokemonDetails] = useState({});\n  const [searchResult, setSearchResult] = useState(null);\n  const [searchError, setSearchError] = useState('');\n  const navigate = useNavigate();\n\n  // quando chiamo questa funzione, scarico una pagina di pokémon e i loro dettagli per mostrare lo sprite\n  const fetchPokemonPage = async () => {\n    if (!nextUrl) return;\n    setLoading(true);\n    try {\n      const response = await fetch(nextUrl);\n      const data = await response.json();\n      setPokemonList(prev => {\n        // aggiungo solo i pokémon che non sono già presenti\n        const existingNames = new Set(prev.map(p => p.name));\n        console.log(data);\n        const newPokemon = data.results.filter(p => !existingNames.has(p.name));\n        return [...prev, ...newPokemon];\n      });\n      setNextUrl(data.next);\n\n      // per ogni nuovo pokémon, scarico i dettagli solo se non li ho già\n      data.results.forEach(async pokemon => {\n        if (!pokemonDetails[pokemon.name]) {\n          const res = await fetch(pokemon.url);\n          const details = await res.json();\n          setPokemonDetails(prev => ({\n            ...prev,\n            [pokemon.name]: details\n          }));\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  // quando il componente viene montato, scarico la prima pagina di pokémon\n  useEffect(() => {\n    fetchPokemonPage();\n  }, []);\n\n  // nuova funzione per la ricerca \n  // ora dovrebbe cercare tra i pokémon già caricati \n  // e se non trova nulla lì, cercare tramite API\n  useEffect(() => {\n    if (search.trim() === '') {\n      setSearchResult(null);\n      setSearchError('');\n      return;\n    }\n    // cerca tra quelli già caricati\n    const found = pokemonList.find(p => p.name.toLowerCase() === search.toLowerCase());\n    if (found) {\n      setSearchResult(null);\n      setSearchError('');\n      return;\n    }\n    // cerca tramite API\n    const fetchSearchedPokemon = async () => {\n      setSearchError('');\n      try {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${search.toLowerCase()}`);\n        if (!res.ok) {\n          setSearchResult(null);\n          setSearchError('Pokémon non trovato');\n          return;\n        }\n        const details = await res.json();\n        setPokemonDetails(prev => ({\n          ...prev,\n          [details.name]: details\n        }));\n        // imposta il risultato solo dopo aver scaricato i dettagli\n        setSearchResult({\n          name: details.name,\n          url: `https://pokeapi.co/api/v2/pokemon/${details.name}`\n        });\n      } catch (err) {\n        setSearchResult(null);\n        setSearchError('Pokémon non trovato');\n      }\n    };\n    fetchSearchedPokemon();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  // filtro i pokémon già caricati in base al testo inserito dall'utente\n  const filteredPokemon = searchResult ? [searchResult] : searchError ? [] : search.trim() === '' ? pokemonList : pokemonList.filter(p => p.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-form\",\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"cerca pok\\xE9mon per nome\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          style: {\n            padding: '8px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), searchError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'yellow',\n          marginBottom: 10\n        },\n        children: searchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonGrid, {\n        pokemonList: filteredPokemon,\n        pokemonDetails: pokemonDetails,\n        onPokemonClick: name => navigate(`/pokemon/${name}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), nextUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPokemonPage,\n        disabled: loading,\n        style: {\n          marginTop: 16,\n          padding: '8px 16px',\n          fontSize: '16px'\n        },\n        children: loading ? 'caricamento' : 'carica altri'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonList, \"wp3SwC9Nt+KraxfZQwWCNcSkoGQ=\", false, function () {\n  return [useNavigate];\n});\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PokemonGrid","jsxDEV","_jsxDEV","PokemonList","_s","PAGE_SIZE","pokemonList","setPokemonList","search","setSearch","nextUrl","setNextUrl","loading","setLoading","pokemonDetails","setPokemonDetails","searchResult","setSearchResult","searchError","setSearchError","navigate","fetchPokemonPage","response","fetch","data","json","prev","existingNames","Set","map","p","name","console","log","newPokemon","results","filter","has","next","forEach","pokemon","res","url","details","err","error","trim","found","find","toLowerCase","fetchSearchedPokemon","ok","filteredPokemon","includes","className","children","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","style","padding","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","onPokemonClick","onClick","disabled","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/AlessioLongo/OneDrive - ITS Angelo Rizzoli/Documenti/Workspace/pokemonweb/frontend/src/components/PokemonList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PokemonGrid from './PokemonGrid';\r\nimport '../App.css';\r\n\r\n// creo il componente che mostra la lista dei pokémon\r\nfunction PokemonList() {\r\n  // imposto il numero di pokémon per pagina\r\n  const PAGE_SIZE = 18;\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  // uso la porta 5000 per il server locale (è quella default di flask)\r\n  const [nextUrl, setNextUrl] = useState(`http://localhost:5000/api/pokemon?limit=${PAGE_SIZE}`);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pokemonDetails, setPokemonDetails] = useState({});\r\n  const [searchResult, setSearchResult] = useState(null);\r\n  const [searchError, setSearchError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // quando chiamo questa funzione, scarico una pagina di pokémon e i loro dettagli per mostrare lo sprite\r\n  const fetchPokemonPage = async () => {\r\n    if (!nextUrl) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(nextUrl);\r\n      const data = await response.json();\r\n      setPokemonList(prev => {\r\n        // aggiungo solo i pokémon che non sono già presenti\r\n        const existingNames = new Set(prev.map(p => p.name));\r\n        console.log(data);\r\n        const newPokemon = data.results.filter(p => !existingNames.has(p.name));\r\n        return [...prev, ...newPokemon];\r\n      });\r\n      setNextUrl(data.next);\r\n\r\n      // per ogni nuovo pokémon, scarico i dettagli solo se non li ho già\r\n      data.results.forEach(async (pokemon) => {\r\n        if (!pokemonDetails[pokemon.name]) {\r\n          const res = await fetch(pokemon.url);\r\n          const details = await res.json();\r\n          setPokemonDetails(prev => ({\r\n            ...prev,\r\n            [pokemon.name]: details\r\n          }));\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // quando il componente viene montato, scarico la prima pagina di pokémon\r\n  useEffect(() => {\r\n    fetchPokemonPage();\r\n  }, []);\r\n\r\n  // nuova funzione per la ricerca \r\n  // ora dovrebbe cercare tra i pokémon già caricati \r\n  // e se non trova nulla lì, cercare tramite API\r\n  useEffect(() => {\r\n    if (search.trim() === '') {\r\n      setSearchResult(null);\r\n      setSearchError('');\r\n      return;\r\n    }\r\n    // cerca tra quelli già caricati\r\n    const found = pokemonList.find(p => p.name.toLowerCase() === search.toLowerCase());\r\n    if (found) {\r\n      setSearchResult(null);\r\n      setSearchError('');\r\n      return;\r\n    }\r\n    // cerca tramite API\r\n    const fetchSearchedPokemon = async () => {\r\n      setSearchError('');\r\n      try {\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${search.toLowerCase()}`);\r\n        if (!res.ok) {\r\n          setSearchResult(null);\r\n          setSearchError('Pokémon non trovato');\r\n          return;\r\n        }\r\n        const details = await res.json();\r\n        setPokemonDetails(prev => ({\r\n          ...prev,\r\n          [details.name]: details\r\n        }));\r\n        // imposta il risultato solo dopo aver scaricato i dettagli\r\n        setSearchResult({\r\n          name: details.name,\r\n          url: `https://pokeapi.co/api/v2/pokemon/${details.name}`\r\n        });\r\n      } catch (err) {\r\n        setSearchResult(null);\r\n        setSearchError('Pokémon non trovato');\r\n      }\r\n    };\r\n    fetchSearchedPokemon();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [search]);\r\n\r\n  // filtro i pokémon già caricati in base al testo inserito dall'utente\r\n  const filteredPokemon = searchResult\r\n    ? [searchResult]\r\n    : searchError\r\n      ? []\r\n      : search.trim() === ''\r\n      ? pokemonList\r\n    : pokemonList.filter(p =>\r\n        p.name.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <header className=\"App-header\">\r\n        {/* qui mostro il form per filtrare i pokémon */}\r\n        <form className=\"search-form\" onSubmit={e => e.preventDefault()}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"cerca pokémon per nome\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            style={{ padding: '8px', fontSize: '16px' }}\r\n          />\r\n        </form>\r\n        {searchError && (\r\n          <div style={{ color: 'yellow', marginBottom: 10 }}>{searchError}</div>\r\n        )}\r\n        {/* qui uso il nuovo componente per mostrare la griglia dei pokémon */}\r\n        <PokemonGrid\r\n          pokemonList={filteredPokemon}\r\n          pokemonDetails={pokemonDetails}\r\n          onPokemonClick={name => navigate(`/pokemon/${name}`)}\r\n        />\r\n        {/* qui mostro il bottone per caricare altri pokémon */}\r\n        {nextUrl && (\r\n          <button\r\n            onClick={fetchPokemonPage}\r\n            disabled={loading}\r\n            style={{ marginTop: 16, padding: '8px 16px', fontSize: '16px' }}\r\n          >\r\n            {loading ? 'caricamento' : 'carica altri'}\r\n          </button>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}