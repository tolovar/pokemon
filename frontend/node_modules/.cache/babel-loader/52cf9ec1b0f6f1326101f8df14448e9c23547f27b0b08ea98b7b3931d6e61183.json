{"ast":null,"code":"// restituisco classi tailwind diverse in base al tipo pokémon\nexport function typeColorClass(type) {\n  switch (type) {\n    case 'grass':\n      return 'border-green-400';\n    case 'fire':\n      return 'border-red-400';\n    case 'water':\n      return 'border-blue-400';\n    case 'electric':\n      return 'border-yellow-400';\n    case 'psychic':\n      return 'border-purple-400';\n    case 'ice':\n      return 'border-cyan-400';\n    case 'dragon':\n      return 'border-orange-400';\n    case 'dark':\n      return 'border-gray-800';\n    case 'fairy':\n      return 'border-pink-400';\n    case 'fighting':\n      return 'border-red-600';\n    case 'poison':\n      return 'border-purple-600';\n    case 'ground':\n      return 'border-brown-400';\n    case 'rock':\n      return 'border-yellow-600';\n    case 'bug':\n      return 'border-green-600';\n    case 'ghost':\n      return 'border-indigo-400';\n    case 'steel':\n      return 'border-gray-600';\n    case 'flying':\n      return 'border-blue-600';\n    case 'normal':\n      return 'border-gray-300';\n    default:\n      return 'border-gray-300';\n  }\n}","map":{"version":3,"names":["typeColorClass","type"],"sources":["C:/Users/aless/Lavoro/workspace/pokemonweb/frontend/src/utils/typeColorClass.js"],"sourcesContent":["// restituisco classi tailwind diverse in base al tipo pokémon\r\nexport function typeColorClass(type) {\r\n  switch (type) {\r\n    case 'grass': return 'border-green-400';\r\n    case 'fire': return 'border-red-400';\r\n    case 'water': return 'border-blue-400';\r\n    case 'electric': return 'border-yellow-400';\r\n    case 'psychic': return 'border-purple-400';\r\n    case 'ice': return 'border-cyan-400';\r\n    case 'dragon': return 'border-orange-400';\r\n    case 'dark': return 'border-gray-800'; \r\n    case 'fairy': return 'border-pink-400';\r\n    case 'fighting': return 'border-red-600';\r\n    case 'poison': return 'border-purple-600';\r\n    case 'ground': return 'border-brown-400';\r\n    case 'rock': return 'border-yellow-600';\r\n    case 'bug': return 'border-green-600';\r\n    case 'ghost': return 'border-indigo-400';\r\n    case 'steel': return 'border-gray-600';\r\n    case 'flying': return 'border-blue-600';\r\n    case 'normal': return 'border-gray-300';\r\n    default: return 'border-gray-300';\r\n  }\r\n}"],"mappings":"AAAA;AACA,OAAO,SAASA,cAAcA,CAACC,IAAI,EAAE;EACnC,QAAQA,IAAI;IACV,KAAK,OAAO;MAAE,OAAO,kBAAkB;IACvC,KAAK,MAAM;MAAE,OAAO,gBAAgB;IACpC,KAAK,OAAO;MAAE,OAAO,iBAAiB;IACtC,KAAK,UAAU;MAAE,OAAO,mBAAmB;IAC3C,KAAK,SAAS;MAAE,OAAO,mBAAmB;IAC1C,KAAK,KAAK;MAAE,OAAO,iBAAiB;IACpC,KAAK,QAAQ;MAAE,OAAO,mBAAmB;IACzC,KAAK,MAAM;MAAE,OAAO,iBAAiB;IACrC,KAAK,OAAO;MAAE,OAAO,iBAAiB;IACtC,KAAK,UAAU;MAAE,OAAO,gBAAgB;IACxC,KAAK,QAAQ;MAAE,OAAO,mBAAmB;IACzC,KAAK,QAAQ;MAAE,OAAO,kBAAkB;IACxC,KAAK,MAAM;MAAE,OAAO,mBAAmB;IACvC,KAAK,KAAK;MAAE,OAAO,kBAAkB;IACrC,KAAK,OAAO;MAAE,OAAO,mBAAmB;IACxC,KAAK,OAAO;MAAE,OAAO,iBAAiB;IACtC,KAAK,QAAQ;MAAE,OAAO,iBAAiB;IACvC,KAAK,QAAQ;MAAE,OAAO,iBAAiB;IACvC;MAAS,OAAO,iBAAiB;EACnC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}